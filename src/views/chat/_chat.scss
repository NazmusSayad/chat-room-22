@use '../' as *;

#root[view='chatView'] {
  background-color: var(--root-bg);
}

.chat {
  --padding: 3rem;
  width: min(calc(100% - var(--padding)), 65rem);
  height: calc(100% - var(--padding));
  border-radius: 0.5rem;
  box-shadow: 0 0 1rem var(--clr-shadow);
  overflow: hidden;
  background-color: var(--bg-light);
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  font-family: 'Rubik', sans-serif;
  transition-property: width, height, border-radius;
  transition-duration: 0.25s;

  @include break($small) {
    height: 100%;
    width: 100%;
    border-radius: 0;
  }

  header {
    background-color: var(--light);
    padding: 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  &__container {
    position: relative;
    flex: 1;
    overflow-x: hidden;
    overflow-y: scroll;
    padding: 1.5rem 2.5rem;
    z-index: 1;
    @extend %firefox-scrollbar;

    &.loaded {
      scroll-behavior: smooth;
    }

    .message {
      --message-p-color: var(--text-them);
      --message-p-bg: var(--light);

      width: 100%;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      margin-bottom: 1.7rem;
      color: var(--dark);
      animation: slide-message 0.5s forwards;

      .body {
        width: 80%;
        display: flex;
        align-items: center;
        gap: 1rem;

        .content {
          width: fit-content;
          max-width: 100%;
        }

        .delete {
          color: gray;
          background-color: transparent;
          display: none;
          border: 0;
          outline: 0;
          opacity: 0;
          transform: scale(0) translateX(400%);
          transition: 0.35s ease;

          &:hover {
            color: var(--foreground);
          }

          &:active {
            color: var(--error);
          }
        }
      }

      img.emoji {
        display: inline;
        height: 1.1em;
        aspect-ratio: 1;
        margin-bottom: -0.2em;
      }

      .user {
        color: var(--clr-secondary);
        font-weight: 700;
        font-size: 1.4rem;
        margin-bottom: 0.5rem;
        text-transform: capitalize;
      }

      p {
        width: max-content;
        max-width: 100%;
        color: var(--message-p-color);
        background: var(--message-p-bg);
        line-height: 2rem;
        padding: 1.25rem 2rem;
        word-wrap: break-word;
        border-radius: 2rem;

        a {
          color: inherit;
        }
      }

      p:empty {
        display: none;
      }

      .images:not(:empty) {
        max-width: 40rem;
        position: relative;
        padding: 0.5rem;

        &::before {
          content: '';
          display: block;
          position: absolute;
          z-index: -1;
          inset: 0;
          background: var(--message-p-bg);
          border-radius: 0.75rem;
          opacity: 0.75;
          transition: opacity 0.25s;
        }

        img {
          border-radius: 0.35rem;
          cursor: pointer;
          box-shadow: 0 0 0.2rem #000;
          width: 100%;

          &:not(:last-child) {
            margin-bottom: 0.3rem;
          }
        }
      }

      &:hover {
        .body > .delete {
          opacity: 1;
          transform: scale(1) translateX(0);
        }
      }

      @media (pointer: coarse) {
        &.showDeleteBtn {
          .body > .delete {
            opacity: 1;
            transform: scale(1);
          }
        }
      }

      &.deleteMode {
        position: relative;
        z-index: -100;
        transform-origin: left;
        animation: delete-message 0.5s forwards !important;
      }

      &[data-user='you'] {
        --message-p-color: var(--text-you);
        --message-p-bg: var(--clr-primary);

        align-items: flex-end;
        margin-left: auto;
        animation-name: slide-message-you;

        &.deleteMode {
          transform-origin: right;
        }

        .body {
          flex-direction: row-reverse;

          .delete {
            display: unset;
          }
        }

        p {
          align-self: flex-end;
        }

        p,
        .images {
          margin-left: auto;
        }

        p,
        .images:not(:empty)::before {
          border-top-right-radius: 0;
        }

        &[data-image] p {
          border-bottom-right-radius: 0;
          border-bottom-left-radius: 0;
        }
      }

      &:not([data-user='you']) {
        p,
        .images:not(:empty)::before {
          border-top-left-radius: 0;
        }

        &[data-image] p {
          border-bottom-left-radius: 0;
          border-bottom-right-radius: 0;
        }
      }

      &[data-status='pending'] {
        p {
          background: var(--clr-primary-light);
        }

        .images:not(:empty)::before {
          opacity: 0.3;
        }

        .delete {
          display: none !important;
        }
      }

      &[data-status='sent'] p {
        transition: 0.3s;
      }
    }
  }

  &__form {
    background-color: var(--light);
    display: flex;
    align-items: center;
    padding: 0.7rem 1.5rem;
    gap: 0.3rem;

    @include break($xsmall) {
      padding-left: 1rem;
      padding-right: 1rem;
    }

    .textarea-container {
      width: 100%;
      background: var(--bg-dark);
      padding: 0.5rem 1.5rem;
      border-radius: 2rem;
      margin: 0 0.7rem;

      textarea {
        display: block;
        width: 100%;
        color: var(--dark);
        background: transparent;
        font-size: 1.6rem;
        line-height: 1.5;
        resize: none;
        outline: none;
        border: none;
      }
    }

    .file-input {
      width: 3rem;
      position: relative;

      &::before {
        content: attr(data-files);
        display: block;
        font-size: 1.1rem;
        line-height: 1;
        position: absolute;
        right: 0;
        top: 0;
        height: 1em;
        width: 1em;
        padding: 0.2em;
        box-sizing: content-box;
        text-align: center;
        border-radius: 50%;
        background: var(--clr-primary);
        box-shadow: 0 0 0.1em #000;
        color: var(--dark);
      }

      &[data-files='']::before {
        display: none;
      }

      svg {
        width: 100%;
        height: 100%;
        cursor: pointer;

        path {
          transform: translate(-5px, -5px);
        }
      }

      input {
        position: absolute;
        top: 0;
        left: 0;
        overflow: hidden;
        width: 0;
        height: 0;
        z-index: -9999;
      }
    }

    button {
      cursor: default;
      height: 3.5rem;
      aspect-ratio: 1;
      background: transparent;
      box-shadow: none;
      border: 0;
      text-align: center;
      transition: all 0.3s ease;
      padding: 0.6rem;
      border-radius: 50%;

      &:not([disabled]):hover {
        cursor: pointer;
        background: var(--bg-dark);
      }

      svg {
        transform: translateX(0.15rem);
      }
    }
  }
}

#image-modal {
  visibility: hidden;
  position: fixed;
  z-index: 1;
  inset: 0;
}

#image-modal.show {
  visibility: visible;
  display: grid;
  place-items: center;
  padding: min(3vw, 3rem);
  backdrop-filter: blur(2px);

  .overlay {
    background: var(--root-bg);
    opacity: 0.85;
    position: absolute;
    inset: 0;
    z-index: -1;
  }

  .closeBtn {
    position: absolute;
    right: 2rem;
    top: 2rem;
  }

  .content {
    img {
      max-height: 100%;
    }
  }
}

#connection-status {
  position: fixed;
  left: 3.5rem;
  bottom: 2.5rem;
  color: var(--text-them);
  padding: 1rem 1.75rem;
  padding-right: 1.25rem;
  border-radius: 1rem;
  display: flex;
  gap: 1.25rem;
  align-items: center;
  max-height: fit-content;
  transform: translateY(calc(100% + 3rem));
  transition: transform 0.5s ease-in-out;
  box-shadow: 0 0 1.5rem -1rem var(--text-them);

  &.show {
    transform: translateY(0);
    transition-duration: 0.2s;
  }

  p {
    display: none;
  }

  i {
    cursor: pointer;
    font-size: 2rem;
    padding: 0.5rem;
    background: #ffffff30;
    aspect-ratio: 1;
    border-radius: 50%;
    height: 1.5em;
    transition: 0.2s ease-in-out;
    transition-property: background, color;
    text-align: center;

    &:hover {
      background: #ffffff50;
      color: var(--error);
    }
  }

  &[data-status='online'] {
    background: var(--clr-primary);

    .online {
      display: block;
    }
  }

  &[data-status='offline'] {
    background: var(--error);

    .offline {
      display: block;
    }
  }
}
